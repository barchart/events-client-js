openapi: 3.0.0

info:
  title: Event API
  description: The Barchart Event Tracking System collects usage statistics from various software systems.
  version: 1.3.0

servers:
  - url: https://events-stage.aws.barchart.com
    description: Hostname for stage environment.
  - url: https://events.aws.barchart.com
    description: Hostname for production environment.

components:
  securitySchemes:
    Basic:
      type: http
      scheme: basic

  schemas:
    Event:
      type: object
      properties:
        customer:
          type: string
          description: A name of a customer.
          example: BARCHART
        product:
          type: string
          description: A title of a product
          example: PORTFOLIO
        type:
          type: string
          description: An event type
          example: PORTFOLIO-APPLICATION-LOADED
        timestamp:
          type: number
          example: 1568381886060
        context:
          type: array
          description: An array of context items.
          items:
            type: string
      required:
        - customer
        - product
        - type
        - timestamp
        - context
    EventFull:
      type: object
      properties:
        customer:
          type: string
          description: A name of a customer.
          example: BARCHART
        product:
          type: string
          description: A title of a product.
          example: PORTFOLIO
        type:
          type: string
          description: An event type
          example: PORTFOLIO-APPLICATION-LOADED
        timestamp:
          type: number
          example: 1568381886060
        context:
          type: array
          description: An array of context items.
          items:
            type: string
        sequence:
          type: number
          example: 1
        batch:
          type: string
          format: uuid
      required:
        - customer
        - product
        - type
        - timestamp
        - context
        - batch
        - sequence
    Filter:
      type: object
      properties:
        customer:
          type: string
          description: A name of a customer.
          example: BARCHART
        product:
          type: string
          description: A title of a product.
          example: PORTFOLIO
        start:
          type: string
          description: Start timestamp.
          example: 1571029200000
        end:
          type: string
          description: End timestamp.
          example: 1571115600000
      required:
        - customer
        - product

    Job:
      type: object
      properties:
        job:
          type: string
          description: A job uuid.
          format: uuid
          example: 0527e342-c92c-45ec-a3cf-fd93f87cb068
        source:
          type: string
          description: The identifier of the export job.
          example: JOB-0527e342-c92c-45ec-a3cf-fd93f87cb068
        status:
          type: string
          description: A status of the job.
          example: "RUNNING"
        filter:
          $ref: '#/components/schemas/Filter'
        timing:
          type: object
          properties:
            day:
              type: string
              example: 2019-10-14
            start:
              type: number
              example: 1571073977278
      required: 
        - job
        - filter
        - source
        - status
        - timing

  responses:
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                value:
                  type: object
                  properties:
                    code:
                      type: string
                      description: An error code.
                      example: REQUEST_GENERAL_FAILURE
                    message:
                      type: string
                      description: An error message.
                      example: An attempt to accept new events failed for unspecified reason(s).
                children:
                  type: array
                  example: [ ]
                  items: { }
              required:
                - children
                - value
    Unauthorized:
      description: Authorization failure.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: An error message.
                example: Unauthorized
            required:
              - message

tags:
  - name: Events
  - name: Reports
  - name: System

paths:
  /events:
    post:
      summary: Create events.
      description: Accepts new events, adds them to SQS for async ingestion
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: An array of Events.
              items:
                $ref: "#/components/schemas/Event"
      responses:
        '200':
          description: The array of newly created events.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventFull'
        '500':
          $ref: '#/components/responses/ServerError'

  /reports:
    post:
      summary: Start Report
      description: Notifies the system to begin generation of a new export file. This processing happens asynchronously. In other words, once you make the request, report processing will begin and receive an immediate response with the identifier for the job that's in progress. You will need to check back periodically to determine if the job has completed.
      tags:
        - Reports
      security:
        - Basic: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/Filter'
      responses:
        '200':
          description: A JSON object of the job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

  /reports/{source}:
    get:
      summary: Download Report
      description: Download the report.
      tags:
        - Reports
      security:
        - Basic: []
      parameters:
        - name: source
          in: path
          description: The identifier of the export job.
          required: true
          schema:
            type: string
            example: JOB-0527e342-c92c-45ec-a3cf-fd93f87cb068
        - name: Accept
          in: header
          description: The Accept request-header field can be used to specify certain media types which are acceptable for the response.
          schema:
            type: string
            example: application/json
      responses:
        '200':
          description: Link to the report.
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    example: https://.../file.csv
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

  /reports/{source}/availability:
    get:
      summary: Check Export Status
      description: Once you have started an export, you will need to check its status (before attempting a download).
      tags:
        - Reports
      parameters:
        - name: source
          in: path
          description: The identifier of the export job.
          required: true
          schema:
            type: string
            example: JOB-0527e342-c92c-45ec-a3cf-fd93f87cb068
      responses:
        '200':
          description: Job object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

  /system/version:
    get:
      summary: Get Version.
      description: Returns current application version
      tags:
        - System
      security:
        - Basic: []
      responses:
        '200':
          description: Version of the API.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.3.0'
        '401':
          $ref: '#/components/responses/Unauthorized'